# run a very simple test against our test-input/ files

name: Check Test Inputs

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run test loop
      run: |
        # very simple shell loop, I should probably rewrite this in pytest...
        GLOBIGNORE=".."
        for f in test-input/*.{yml,yaml}; do
          echo "== test file $f"
          if [ ! -f "$f.test_expected" ]; then
            echo "ERROR: missing test spec file $f.test_expected"
            touch found_error
            continue
          fi
        
          python3 yaml_shellcheck.py "$f" 2>&1 \
            | grep -o '\bSC[0-9]*\b' \
            > "$f.test_findings"
        
          if diff "$f.test_expected" "$f.test_findings"; then
            echo "OK"
          else
            echo "ERROR"
            touch found_error
          fi
        done
        
        # fail test job on error
        if [ -f found_error ]; then
          exit 1
        fi
